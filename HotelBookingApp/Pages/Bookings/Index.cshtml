@page
@model HotelBookingApp.Pages.Bookings.IndexModel
@{
    ViewData["Title"] = "My Bookings";
    Layout = "_Layout";
}

<div class="container mt-4">
    <h2 class="text-center mb-4">My Bookings</h2>
    <div id="bookingsContainer" class="list-group"></div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", async () => {
            const container = document.getElementById("bookingsContainer");
            const response = await fetch("/api/bookings/my");

            if (!response.ok) {
                container.innerHTML = "<p class='text-danger'>You must be logged in to see your bookings.</p>";
                return;
            }

            const bookings = await response.json();
            if (bookings.length === 0) {
                container.innerHTML = "<p>No bookings yet.</p>";
                return;
            }

            bookings.forEach(b => {
                const item = document.createElement("div");
                item.classList.add("list-group-item");
                item.innerHTML = `
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6>${b.room.hotel.name} — Room ${b.room.number}</h6>
                            <p>${b.checkIn.substring(0,10)} → ${b.checkOut.substring(0,10)}</p>
                        </div>
                        <button class="btn btn-danger btn-sm" onclick="cancelBooking('${b.id}')">Cancel</button>
                    </div>
                `;
                container.appendChild(item);
            });
        });

        async function cancelBooking(id) {
            if (!confirm("Cancel this booking?")) return;
            const response = await fetch(`/api/bookings/${id}`, { method: "DELETE" });
            if (response.ok) {
                alert("Booking canceled.");
                location.reload();
            } else {
                alert("Error canceling booking.");
            }
        }
    </script>
}
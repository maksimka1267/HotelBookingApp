@page
@model HotelBookingApp.Pages.Account.LoginModel
@{
    ViewData["Title"] = "Login";
    Layout = "_Layout";
}

<div class="d-flex justify-content-center">
    <div class="card p-4" style="max-width:420px; width:100%;">
        <h2 class="text-center mb-3">Welcome back</h2>
        <form id="loginForm" onsubmit="loginUser(event)" class="reveal in">
            <div class="mb-3">
                <label class="form-label">Email</label>
                <input id="email" type="email" class="form-control" required />
            </div>
            <div class="mb-3">
                <label class="form-label">Password</label>
                <input id="password" type="password" class="form-control" required />
            </div>
            <button type="submit" class="btn btn-success w-100">Login</button>
            <p class="mt-3 text-center small mb-0">
                Don't have an account? <a href="/Account/Register">Register</a>
            </p>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        async function loginUser(e) {
          e.preventDefault();
          const btn = e.target.querySelector('button[type="submit"]'); btn.disabled = true;
          const email = document.getElementById("email").value;
          const password = document.getElementById("password").value;

          const response = await fetch("/api/auth/login", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email, password })
          });

          btn.disabled = false;
          if (response.ok) {
            showToast("Login successful!", "success");
            setTimeout(() => window.location.href = "/", 600);
          } else {
            showToast("Invalid email or password", "danger");
          }
        }
    </script>
}
